# This is a basic workflow to help you get started with Actions

name: test-ci

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - .github/workflows/test-ci.yml
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  INSTALL_NAME: openssl_linux_x86_64

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    # The type of runner that the job will run on
    runs-on: ${{matrix.os}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Parse source.properties
        run: |
          openssl_ver=$(cat source.properties | grep -w 'openssl.ver' | cut -d '=' -f 2 | tr -d ' \n')
          openssl_ver=${openssl_ver//./_}
          echo "OPENSSL_BUILD_TAG=OpenSSL_$openssl_ver" >> $GITHUB_ENV
          ndk_ver=$(cat source.properties | grep -w 'ndk.ver' | cut -d '=' -f 2 | tr -d ' \n')
          echo "NDK_VER=$ndk_ver" >> $GITHUB_ENV
          openssl_config_options=$(cat source.properties | grep -w 'openssl.config.options.1' | cut -d '=' -f 2 | tr -d '\n')
          echo "OPENSSL_CONFIG_OPTIONS_1=$openssl_config_options" >> $GITHUB_ENV
          openssl_config_options=$(cat source.properties | grep -w 'openssl.config.options.2' | cut -d '=' -f 2 | tr -d '\n')
          echo "OPENSSL_CONFIG_OPTIONS_2=$openssl_config_options" >> $GITHUB_ENV
      # Runs a set of commands using the runners shell
      - name: Configure & Build openssl
        run: |
          echo OPENSSL_BUILD_TAG=\<$OPENSSL_BUILD_TAG\>
          echo NDK_VER=\<$NDK_VER\>
          echo OPENSSL_CONFIG_OPTIONS_1=\<$OPENSSL_CONFIG_OPTIONS_1\>
          echo OPENSSL_CONFIG_OPTIONS_2=\<$OPENSSL_CONFIG_OPTIONS_2\>
