# This is a basic workflow to help you get started with Actions

name: android-x86-ci

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - .github/workflows/android-x86-ci.yml
      - source.properties
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  INSTALL_NAME: openssl_android
  PLATFORM_SHORT_ARCH: x86

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Parse source.properties
        run: |
          openssl_ver=$(cat source.properties | grep -w 'openssl.ver' | cut -d '=' -f 2 | tr -d ' \n')
          openssl_ver=${openssl_ver//./_}
          echo "OPENSSL_BUILD_TAG=OpenSSL_$openssl_ver" >> $GITHUB_ENV
          ndk_ver=$(cat source.properties | grep -w 'ndk.ver' | cut -d '=' -f 2 | tr -d ' \n')
          echo "NDK_VER=$ndk_ver" >> $GITHUB_ENV
          openssl_config_options=$(cat source.properties | grep -w 'openssl.config.options.1' | cut -d '=' -f 2 | tr -d '\n')
          echo "OPENSSL_CONFIG_OPTIONS_1=$openssl_config_options" >> $GITHUB_ENV
          openssl_config_options=$(cat source.properties | grep -w 'openssl.config.options.2' | cut -d '=' -f 2 | tr -d '\n')
          echo "OPENSSL_CONFIG_OPTIONS_2=$openssl_config_options" >> $GITHUB_ENV
          android_api_level=$(cat source.properties | grep -w 'android.api.level' | cut -d '=' -f 2 | tr -d ' \n')
          echo "ANDROID_API_LEVEL=$android_api_level" >> $GITHUB_ENV

      # Runs a single command using the runners shell
      - name: Checks-out openssl repo
        run: |
          git clone https://github.com/openssl/openssl.git
          pwd
          cd openssl
          git checkout $OPENSSL_BUILD_TAG
          git submodule update --init --recursive
      # Runs a set of commands using the runners shell
      - name: Configure & Build openssl
        run: |
          perl --version
          wget https://dl.google.com/android/repository/android-ndk-${NDK_VER}-linux-x86_64.zip
          unzip android-ndk-${NDK_VER}-linux-x86_64.zip
          export ANDROID_NDK_HOME=`pwd`/android-ndk-${NDK_VER}
          export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$ANDROID_NDK_HOME/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin:$PATH
          cd openssl
          openssl_src_root=`pwd`
          openssl_install_dir=$openssl_src_root/${INSTALL_NAME}_${PLATFORM_SHORT_ARCH}
          mkdir $openssl_install_dir
          ./Configure android-${PLATFORM_SHORT_ARCH} -D__ANDROID_API__=$ANDROID_API_LEVEL $OPENSSL_CONFIG_OPTIONS_1 $OPENSSL_CONFIG_OPTIONS_2 --prefix=$openssl_install_dir --openssldir=$openssl_install_dir && perl configdata.pm --dump
          make VERBOSE=1
          make install
          rm -rf $openssl_install_dir/bin
          rm -rf $openssl_install_dir/misc
          rm -rf $openssl_install_dir/share
          
      - name: Upload openssl prebuilt files
        uses: actions/upload-artifact@v2
        with:
          path: ./openssl/${{ env.INSTALL_NAME }}_${{ env.PLATFORM_SHORT_ARCH }}/**/*
          name: ${{ env.INSTALL_NAME }}_${{ env.PLATFORM_SHORT_ARCH }}
