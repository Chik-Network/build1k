#
# Copyright (c) 2021-2023 Bytedance Inc.
#

name: build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events
  push:
    paths:
      - .github/workflows/build.yml
      - 1k/build*
      - 1k/nsdk1k.cpp
      - 1k/ios.cmake
      - src/**/build*
      - src/**/install*
      - src/**/patch*
      - src/**/clean*
      - src/**/rel*
      - toolchain.properties
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      no_dll:
         # actions run ID
         description: 'Do not build windows lib as dll'
         # Default value if no value is explicitly provided
         default: ''
         # Input has to be provided for the workflow to run
         required: false
env:
  GH_XCODE_VER: 14.2
  VS_DEPLOYMENT_TARGET: 10.0.17763.0 # for Windows Store(UWP) Apps only

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    env:
      BUILD_TARGET: linux
      BUILD_ARCH: x64

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Build
        run: source 1k/build.sh $BUILD_TARGET $BUILD_ARCH

      - name: Upload prebuilt files
        uses: actions/upload-artifact@v3
        with:
          path: ./${{ env.INSTALL_ROOT }}/**
          name: ${{ env.INSTALL_ROOT }}

  osx:
    # The type of runner that the job will run on
    runs-on: macos-12
    
    strategy:
      matrix:
        arch:
          - x64
          - arm64
    
    env:
      BUILD_TARGET: osx
      BUILD_ARCH: ${{ matrix.arch }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        id: setup-xcode
        with: 
          xcode-version: '${{ env.GH_XCODE_VER }}'

      - name: Build
        run: |
          export XCODE_VERSION=${{ steps.setup-xcode.outputs.version }}
          ./1k/build.sh $BUILD_TARGET $BUILD_ARCH

      - name: Upload prebuilt files
        uses: actions/upload-artifact@v3
        with:
          path: ./${{ env.INSTALL_ROOT }}/**
          name: ${{ env.INSTALL_ROOT }}

  ios:
    # The type of runner that the job will run on
    runs-on: macos-12
    
    strategy:
      matrix:
        arch:
          - arm64
          - x64
    
    env:
      BUILD_TARGET: ios
      BUILD_ARCH: ${{ matrix.arch }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        id: setup-xcode
        with: 
          xcode-version: '${{ env.GH_XCODE_VER }}'

      - name: Build
        run: |
          export XCODE_VERSION=${{ steps.setup-xcode.outputs.version }}
          ./1k/build.sh $BUILD_TARGET $BUILD_ARCH

      - name: Upload prebuilt files
        uses: actions/upload-artifact@v3
        with:
          path: ./${{ env.INSTALL_ROOT }}/**
          name: ${{ env.INSTALL_ROOT }}

  tvos:
    # The type of runner that the job will run on
    runs-on: macos-12
    
    strategy:
      matrix:
        arch:
          - arm64
          - x64
    
    env:
      BUILD_TARGET: tvos
      BUILD_ARCH: ${{ matrix.arch }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        id: setup-xcode
        with: 
          xcode-version: '${{ env.GH_XCODE_VER }}'

      - name: Build
        run: |
          export XCODE_VERSION=${{ steps.setup-xcode.outputs.version }}
          ./1k/build.sh $BUILD_TARGET $BUILD_ARCH

      - name: Upload prebuilt files
        uses: actions/upload-artifact@v3
        with:
          path: ./${{ env.INSTALL_ROOT }}/**
          name: ${{ env.INSTALL_ROOT }}

  android:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        arch:
          - arm
          - arm64
          - x86
          - x64
    
    env:
      BUILD_TARGET: android
      BUILD_ARCH: ${{ matrix.arch }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Build
        run: source 1k/build.sh $BUILD_TARGET $BUILD_ARCH

      - name: Upload prebuilt files
        uses: actions/upload-artifact@v3
        with:
          path: ./${{ env.INSTALL_ROOT }}/**
          name: ${{ env.INSTALL_ROOT }}

  win32:
    # The type of runner that the job will run on
    runs-on: windows-latest
    
    # Run a job for each of the specified target architectures:
    strategy:
      matrix:
        arch:
          - x86
          - x64
    env:
      BUILD_TARGET: win32
      NO_DLL: ${{ github.event.inputs.no_dll }}
      BUILD_ARCH: ${{ matrix.arch }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: ilammy/msvc-dev-cmd@v1.12.1
        with:
          toolset: '14.37'
          arch: ${{ env.BUILD_ARCH }}

      - name: Build
        run: .\1k\build.ps1 $env:BUILD_TARGET $env:BUILD_ARCH 'zlib,openssl,cares,curl,jpeg-turbo,luajit,angle'

      - name: Upload prebuilt files
        uses: actions/upload-artifact@v3
        with:
          path: ./${{ env.INSTALL_ROOT }}/**
          name: ${{ env.INSTALL_ROOT }}
   
  winrt:
    # The type of runner that the job will run on
    runs-on: windows-latest
    
    # Run a job for each of the specified target architectures:
    strategy:
      matrix:
        arch:
          - x64
          - amd64_arm64
    env:
      BUILD_TARGET: winrt
      NO_DLL: ${{ github.event.inputs.no_dll }}
      BUILD_ARCH: ${{ matrix.arch }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: ilammy/msvc-dev-cmd@v1.12.1
        with:
          toolset: '14.37'
          arch: ${{ env.BUILD_ARCH }}
          uwp: true

      - name: Build
        run: .\1k\build.ps1 $env:BUILD_TARGET $env:BUILD_ARCH 'zlib,openssl,cares,curl,jpeg-turbo,luajit,angle'

      - name: Upload prebuilt files
        uses: actions/upload-artifact@v3
        with:
          path: ./${{ env.INSTALL_ROOT }}/**
          name: ${{ env.INSTALL_ROOT }}
